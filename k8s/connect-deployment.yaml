apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose-kafka.yml
    kompose.version: 1.27.0 (b0ed6a2c9)
  creationTimestamp: null
  labels:
    io.kompose.service: connect
  name: connect
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: connect
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose-kafka.yml
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.network/backend: "true"
        io.kompose.service: connect
    spec:
      containers:
        - args:
            - bash
            - -c
            - |
              echo "Installing connector plugins"
              confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.6.0
              confluent-hub install --no-prompt jcustenborder/kafka-connect-spooldir:2.0.65
              confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:5.0.2
              #
              # -----------
              # Launch the Kafka Connect worker
              /etc/confluent/docker/run &
              #
              # Don't exit
              sleep infinity
          env:
            - name: CLASSPATH
              value: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.3.0.jar
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: broker:29092
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: docker-connect-configs
            - name: CONNECT_CONSUMER_INTERCEPTOR_CLASSES
              value: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
            - name: CONNECT_GROUP_ID
              value: compose-connect-group
            - name: CONNECT_INTERNAL_KEY_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter
            - name: CONNECT_INTERNAL_VALUE_CONVERTER
              value: org.apache.kafka.connect.json.JsonConverter
            - name: CONNECT_KEY_CONVERTER
              value: io.confluent.connect.avro.AvroConverter
            - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
              value: http://schema-registry:8081
            - name: CONNECT_LOG4J_LOGGERS
              value: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
            - name: CONNECT_LOG4J_ROOT_LOGLEVEL
              value: WARN
            - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
              value: "10000"
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: docker-connect-offsets
            - name: CONNECT_PLUGIN_PATH
              value: /usr/share/java,/usr/share/confluent-hub-components
            - name: CONNECT_PRODUCER_INTERCEPTOR_CLASSES
              value: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: connect
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: docker-connect-status
            - name: CONNECT_TOOLS_LOG4J_LOGLEVEL
              value: ERROR
            - name: CONNECT_VALUE_CONVERTER
              value: io.confluent.connect.avro.AvroConverter
            - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
              value: http://schema-registry:8081
          image: confluentinc/cp-server-connect:7.3.1
          name: connect
          ports:
            - containerPort: 8083
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: connect-claim0
            - mountPath: /usr/share/confluent-hub-components
              name: connect-claim1
      hostname: connect
      restartPolicy: Always
      volumes:
        - name: connect-claim0
          persistentVolumeClaim:
            claimName: connect-claim0
        - name: connect-claim1
          persistentVolumeClaim:
            claimName: connect-claim1
status: {}
